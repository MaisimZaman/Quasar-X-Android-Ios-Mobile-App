{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Search\\\\SearchScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport firebase from 'firebase';\nimport { auth, db } from \"../../services/firebase\";\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon, Container } from 'native-base';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nrequire('firebase/firestore');\n\nexport default function SearchScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersList = _useState2[0],\n      setUsers = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allPosts = _useState6[0],\n      setAllposts = _useState6[1];\n\n  var _useState7 = useState(15),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  useEffect(function () {\n    var unsubscribe2 = function unsubscribe2() {\n      var addPostToState, exectuueOrder;\n      return _regeneratorRuntime.async(function unsubscribe2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              exectuueOrder = function _exectuueOrder(arr) {\n                if (allPosts < 16) {\n                  arr.forEach(addPostToState);\n                }\n              };\n\n              addPostToState = function _addPostToState(item, index, arr) {\n                return _regeneratorRuntime.async(function addPostToState$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(db.collection(\"posts\").doc(item.userId).collection(\"userPosts\").orderBy('creation', 'desc').onSnapshot(function (snapshot) {\n                          setAllposts(function (allPosts) {\n                            return _toConsumableArray(allPosts).concat(snapshot.docs.map(function (doc) {\n                              return {\n                                id: doc.id,\n                                user: item.userInfo,\n                                data: doc.data()\n                              };\n                            }));\n                          });\n                        }));\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"users\").onSnapshot(function (snapshot) {\n                return exectuueOrder(snapshot.docs.map(function (doc) {\n                  return {\n                    userId: doc.data().uid,\n                    userInfo: doc.data()\n                  };\n                }));\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    unsubscribe2();\n  }, []);\n\n  function renderAllposts() {\n    var _this = this;\n\n    var aposts = 15;\n    var qPosts = allPosts.slice(0, aposts);\n    return qPosts.map(function (_ref, index) {\n      var id = _ref.id,\n          user = _ref.user,\n          data = _ref.data;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Post-Detail\", {\n            id: id,\n            posterName: user.displayName,\n            PosterId: user.uid,\n            posterProfilePic: user.photoURL,\n            image: data.downloadURL,\n            caption: data.caption\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        key: id,\n        style: [{\n          width: width / 3\n        }, {\n          height: width / 3\n        }, {\n          marginBottom: 2\n        }, index % 3 !== 0 ? {\n          paddingLeft: 2\n        } : {\n          paddingLeft: 0\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: {\n          flex: 1,\n          alignSelf: 'stretch',\n          width: undefined,\n          height: undefined\n        },\n        source: {\n          uri: data.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      })));\n    });\n  }\n\n  function fetchUsers(search) {\n    db.collection('users').where('displayName', '>=', search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  }\n\n  function renderPerson(item) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Profile\", {\n          currentUser: item\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, React.createElement(CardItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, React.createElement(Left, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, React.createElement(Thumbnail, {\n      source: {\n        uri: item.photoURL\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }), React.createElement(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      h5: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, item.displayName, \" \"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, item.email))))));\n  }\n\n  function renderMain() {\n    if (search == '') {\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, renderAllposts());\n    } else if (usersList.length == 0) {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, \"No users found\"));\n    }\n\n    function endReached() {\n      setPage(page + 6);\n    }\n\n    if (usersList.length < 15) {\n      var paginatedList = usersList;\n    } else {\n      var paginatedList = usersList.slice(0, page);\n    }\n\n    return React.createElement(FlatList, {\n      numColumns: 1,\n      horizontal: false,\n      data: usersList,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return renderPerson(item);\n      },\n      onEndReached: endReached,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    });\n  }\n\n  fetchUsers(search);\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Seach for User...\",\n    onChangeText: function onChangeText(search) {\n      return setSearch(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }), renderMain()));\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    bottom: 0,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Search/SearchScreen.js"],"names":["React","useState","useEffect","firebase","auth","db","Card","CardItem","Thumbnail","Body","Left","Right","Button","Icon","Container","Dimensions","get","height","width","require","SearchScreen","props","usersList","setUsers","search","setSearch","allPosts","setAllposts","page","setPage","unsubscribe2","addPostToState","exectuueOrder","arr","forEach","item","index","collection","doc","userId","orderBy","onSnapshot","snapshot","concat","docs","map","id","user","userInfo","data","uid","renderAllposts","aposts","qPosts","slice","navigation","navigate","posterName","displayName","PosterId","posterProfilePic","photoURL","image","downloadURL","caption","marginBottom","paddingLeft","flex","alignSelf","undefined","uri","fetchUsers","where","then","users","renderPerson","currentUser","email","renderMain","flexDirection","flexWrap","length","endReached","paginatedList","styles","textInput","StyleSheet","create","bottom","marginRight","backgroundColor","padding","color","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, TextInput, FlatList, TouchableOpacity, StyleSheet, ScrollView, Dimensions, Image, KeyboardAvoidingView } from 'react-native'\r\nimport firebase from 'firebase'\r\nimport {auth, db } from '../../services/firebase'\r\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon, Container} from 'native-base'\r\nvar { height, width } = Dimensions.get('window');\r\n\r\n\r\nrequire('firebase/firestore');\r\n\r\nexport default function SearchScreen(props) {\r\n    const [usersList, setUsers] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const [allPosts, setAllposts] = useState([])\r\n    const [page, setPage] = useState(15);\r\n    \r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n            const unsubscribe2 = async () => {\r\n\r\n\r\n                async function addPostToState(item, index, arr){\r\n                    //console.log(index)\r\n                    await db.collection(\"posts\")\r\n                    .doc(item.userId)\r\n                    .collection(\"userPosts\")\r\n                    .orderBy('creation', 'desc')\r\n                    .onSnapshot((snapshot) => {\r\n                        setAllposts(allPosts => [...allPosts].concat(\r\n                            snapshot.docs.map(doc => ({\r\n                                id: doc.id,\r\n                                user: item.userInfo,\r\n                                data: doc.data()\r\n\r\n                            }))\r\n\r\n\r\n                        ))\r\n                    })\r\n                \r\n\r\n                }\r\n\r\n                function exectuueOrder(arr){\r\n                    if (allPosts < 16){\r\n                        arr.forEach(addPostToState)\r\n\r\n                    }\r\n        \r\n                }\r\n\r\n                \r\n\r\n                await db.collection(\"users\")\r\n                .onSnapshot((snapshot) => exectuueOrder(snapshot.docs.map(doc => {\r\n                    return {userId: doc.data().uid, userInfo: doc.data()}\r\n                    \r\n\r\n                })))   \r\n                    \r\n            }\r\n                \r\n            \r\n            \r\n\r\n        \r\n        unsubscribe2()\r\n        \r\n        \r\n    \r\n    }, [])\r\n\r\n    \r\n    \r\n    \r\n    \r\n\r\n    function renderAllposts(){\r\n        var aposts = 15\r\n        var qPosts = allPosts.slice(0, aposts)\r\n        return qPosts.map(({id, user, data}, index) => {\r\n\r\n            \r\n            return (\r\n                <TouchableOpacity onPress={() => props.navigation.navigate(\"Post-Detail\", {\r\n                    id: id,\r\n                    posterName: user.displayName,\r\n                    PosterId: user.uid,\r\n                    posterProfilePic: user.photoURL,\r\n                    image: data.downloadURL,\r\n                    caption: data.caption\r\n                })}>\r\n                <View key={id} style={[{ width: (width) / 3 }, { height: (width) / 3 }, { marginBottom: 2 }, index % 3 !== 0 ? { paddingLeft: 2 } : { paddingLeft: 0 }]}>\r\n                        \r\n                        <Image style={{\r\n                            flex: 1,\r\n                            alignSelf: 'stretch',\r\n                            width: undefined,\r\n                            height: undefined,\r\n\r\n                        }}      \r\n                            \r\n                            source={{uri: data.downloadURL}}>\r\n                        </Image>    \r\n\r\n                </View>\r\n                </TouchableOpacity>\r\n             \r\n                \r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    function fetchUsers(search){\r\n        //console.warn(\"Function was called\")\r\n        db.collection('users')\r\n            .where('displayName', '>=', search)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                });\r\n                setUsers(users);\r\n        })\r\n\r\n \r\n       \r\n    }\r\n\r\n    function renderPerson(item){\r\n        return (\r\n            <View>\r\n                <TouchableOpacity\r\n                        onPress={() => props.navigation.navigate(\"Profile\", {\r\n                            currentUser: item\r\n                        })}>\r\n            <CardItem>\r\n        <Left>\r\n            <Thumbnail source={{uri: item.photoURL}} />\r\n\r\n            <Body>\r\n                <Text h5>{item.displayName} </Text>\r\n                <Text>{item.email}</Text>\r\n            </Body>\r\n        </Left>\r\n        </CardItem>\r\n        </TouchableOpacity>\r\n        </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n    function renderMain(){\r\n\r\n        if (search == ''){\r\n            return (\r\n                \r\n                    <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                        {renderAllposts()}\r\n                    </View>\r\n                \r\n            )\r\n        }\r\n\r\n\r\n\r\n        else if (usersList.length == 0){\r\n            return (\r\n                <View>\r\n                    <Text>No users found</Text>\r\n                </View>\r\n            )\r\n        }\r\n\r\n        function endReached(){\r\n            setPage(page +6)\r\n\r\n        }\r\n\r\n        if (usersList.length < 15){\r\n            var paginatedList = usersList\r\n        }\r\n        else {\r\n            var paginatedList = usersList.slice(0, page)\r\n        }\r\n\r\n        return (\r\n\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={usersList}\r\n                renderItem={({ item }) => (\r\n                   renderPerson(item)\r\n\r\n                )}\r\n                onEndReached={endReached}\r\n            />\r\n        )\r\n    }\r\n\r\n    fetchUsers(search)\r\n   \r\n\r\n    return (\r\n\r\n        <Container>\r\n            <ScrollView>\r\n                <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Seach for User...\"\r\n                    onChangeText={(search) => setSearch(search)} />\r\n\r\n                {renderMain()}\r\n\r\n            </ScrollView>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        bottom: 0,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}