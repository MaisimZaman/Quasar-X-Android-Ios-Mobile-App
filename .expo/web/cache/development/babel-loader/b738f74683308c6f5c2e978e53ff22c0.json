{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Feed.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Container, Content, Icon } from 'native-base';\nimport PostCard from \"../components/PostCard\";\nimport { auth, db } from \"../firebase\";\nimport { ScrollView } from 'react-native-gesture-handler';\nexport default function Feed() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var postsFor = auth.currentUser.uid;\n  useEffect(function () {\n    var unsubscribe = db.collection('posts').doc(postsFor).collection('userPosts').orderBy('creation', 'desc').onSnapshot(function (snapshot) {\n      return setPosts(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, []);\n\n  function renderPosts() {\n    var _this = this;\n\n    return posts.map(function (_ref) {\n      var id = _ref.id,\n          data = _ref.data;\n      return React.createElement(PostCard, {\n        key: id,\n        posterName: auth.currentUser.displayName,\n        posterProfilePic: auth.currentUser.photoURL,\n        image: data.downloadURL,\n        postDate: data.creation,\n        caption: data.caption,\n        likes: data.likesCount,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, renderPosts())));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Feed.js"],"names":["React","useState","useEffect","Container","Content","Icon","PostCard","auth","db","ScrollView","Feed","posts","setPosts","postsFor","currentUser","uid","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","renderPosts","displayName","photoURL","downloadURL","creation","caption","likesCount","styles","container","StyleSheet","create","flex","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,IAA5B,QAAuC,aAAvC;AACA,OAAOC,QAAP;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAKA,eAAe,SAASC,IAAT,GAAgB;AAE3B,kBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AAGA,MAAMC,QAAQ,GAAGN,IAAI,CAACO,WAAL,CAAiBC,GAAlC;AAGAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMc,WAAW,GAAGR,EAAE,CAACS,UAAH,CAAc,OAAd,EACfC,GADe,CACXL,QADW,EACDI,UADC,CACU,WADV,EAEfE,OAFe,CAEP,UAFO,EAEK,MAFL,EAGfC,UAHe,CAGJ,UAACC,QAAD;AAAA,aAAcT,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAL,GAAG;AAAA,eAAK;AAC7DM,UAAAA,EAAE,EAAEN,GAAG,CAACM,EADqD;AAE7DC,UAAAA,IAAI,EAAEP,GAAG,CAACO,IAAJ;AAFuD,SAAL;AAAA,OAArB,CAAD,CAAtB;AAAA,KAHI,CAApB;AAQA,WAAOT,WAAP;AACH,GAVQ,EAUN,EAVM,CAAT;;AAiBA,WAASU,WAAT,GAAsB;AAAA;;AAClB,WACIf,KAAK,CAACY,GAAN,CAAU;AAAA,UAAEC,EAAF,QAAEA,EAAF;AAAA,UAAMC,IAAN,QAAMA,IAAN;AAAA,aACN,oBAAC,QAAD;AAEA,QAAA,GAAG,EAAED,EAFL;AAGA,QAAA,UAAU,EAAEjB,IAAI,CAACO,WAAL,CAAiBa,WAH7B;AAIA,QAAA,gBAAgB,EAAEpB,IAAI,CAACO,WAAL,CAAiBc,QAJnC;AAKA,QAAA,KAAK,EAAEH,IAAI,CAACI,WALZ;AAMA,QAAA,QAAQ,EAAEJ,IAAI,CAACK,QANf;AAOA,QAAA,OAAO,EAAEL,IAAI,CAACM,OAPd;AAQA,QAAA,KAAK,EAAEN,IAAI,CAACO,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;AAAA,KAAV,CADJ;AAeH;;AAKD,SACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,WAAW,EADhB,CADA,CADJ,CADJ;AAUH;AAED,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADkB,CAAlB,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View} from 'react-native'\r\nimport {Container, Content, Icon} from 'native-base'\r\nimport PostCard from '../components/PostCard'\r\nimport { auth, db } from '../firebase'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\n\r\n\r\n\r\n\r\nexport default function Feed() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n\r\n    const postsFor = auth.currentUser.uid;\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('posts')\r\n            .doc(postsFor).collection('userPosts')\r\n            .orderBy('creation', 'desc')\r\n            .onSnapshot((snapshot) => setPosts(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n            }))))\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    \r\n\r\n    //console.log(posts[0].data.caption)\r\n\r\n\r\n    function renderPosts(){\r\n        return (\r\n            posts.map(({id, data}) => (\r\n                <PostCard\r\n                //key={id}\r\n                key={id}\r\n                posterName={auth.currentUser.displayName}\r\n                posterProfilePic={auth.currentUser.photoURL}\r\n                image={data.downloadURL}\r\n                postDate={data.creation}\r\n                caption={data.caption}\r\n                likes={data.likesCount}\r\n                \r\n                />\r\n            ))\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <Container style={styles.container}>\r\n            <Container>\r\n            <ScrollView>\r\n                {renderPosts()}\r\n            </ScrollView>\r\n            </Container>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}