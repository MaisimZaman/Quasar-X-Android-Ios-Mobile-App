{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\ChatScreen.js\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Avatar } from 'react-native-elements';\nimport { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { StatusBar } from 'expo-status-bar';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { auth, db } from \"../firebase\";\nimport * as firebase from 'firebase';\nexport default function ChatScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      chatName = _route$params.chatName,\n      id = _route$params.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: chatName,\n      headerBackTitleVisible: true,\n      headerTitleAlgin: \"left\",\n      headerTitle: function headerTitle() {\n        var _messages$;\n\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, React.createElement(Avatar, {\n          rounded: true,\n          source: {\n            uri: ((_messages$ = messages[0]) == null ? void 0 : _messages$.data.photoURL) || 'https://d1w8cc2yygc27j.cloudfront.net/-2291064301122165519/-6907002593267796194.jpg'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: \"black\",\n            marginLeft: 10,\n            fontWeight: \"700\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, chatName));\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: navigation.goBack,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, React.createElement(AntDesign, {\n          name: \"arrowleft\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 80,\n            marginRight: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"video-camera\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }\n        })), React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        }, React.createElement(Ionicons, {\n          name: \"call\",\n          size: 24,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        })));\n      }\n    });\n  }, [navigation, messages]);\n\n  function sendMessage() {\n    Keyboard.dismiss();\n    db.collection('chats').doc(id).collection('messages').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL\n    });\n    setInput('');\n  }\n\n  useLayoutEffect(function () {\n    var unsubscribe = db.collection('chats').doc(id).collection('messages').orderBy('timestamp').onSnapshot(function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, [route]);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    keyboardVerticalOffset: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, messages.map(function (_ref2) {\n    var id = _ref2.id,\n        data = _ref2.data;\n    return data.email === auth.currentUser.email ? React.createElement(View, {\n      key: id,\n      style: styles.reciver,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, React.createElement(Avatar, {\n      position: \"absolute\",\n      rounded: true,\n      bottom: -15,\n      right: -5,\n      size: 30,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }), React.createElement(Text, {\n      style: styles.reciverText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, data.message)) : React.createElement(View, {\n      key: id,\n      style: styles.sender,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Profile\", {\n          currentUser: data\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, React.createElement(Avatar, {\n      position: \"absolute\",\n      rounded: true,\n      bottom: -15,\n      right: -5,\n      size: 30,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    })), React.createElement(Text, {\n      style: styles.senderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, data.message), React.createElement(Text, {\n      style: styles.senderName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, data.displayName));\n  })), React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    onSubmitEditing: sendMessage,\n    placeholder: \"Message..\",\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"send\",\n    size: 24,\n    color: \"#2b68E6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15\n  },\n  textInput: {\n    bottom: 0,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  },\n  reciverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15\n  },\n  reciver: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"#2B68E6\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/ChatScreen.js"],"names":["React","useLayoutEffect","useState","Avatar","AntDesign","FontAwesome","Ionicons","StatusBar","ScrollView","TextInput","auth","db","firebase","ChatScreen","navigation","route","params","chatName","id","input","setInput","messages","setMessages","setOptions","title","headerBackTitleVisible","headerTitleAlgin","headerTitle","flexDirection","alignItems","uri","data","photoURL","color","marginLeft","fontWeight","headerLeft","goBack","headerRight","justifyContent","width","marginRight","sendMessage","Keyboard","dismiss","collection","doc","add","timestamp","firestore","FieldValue","serverTimestamp","message","displayName","currentUser","email","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","flex","backgroundColor","Platform","OS","styles","container","paddingTop","reciver","reciverText","sender","navigate","senderText","senderName","footer","text","textInput","StyleSheet","create","padding","bottom","borderRadius","marginBottom","alignSelf","maxWidth","position","margin","left","paddingRight","fontSize"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity, TouchableWithoutFeedback } from 'react-native'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons'\r\nimport { SafeAreaView } from 'react-native'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { Platform } from 'react-native'\r\nimport { ScrollView, TextInput } from 'react-native-gesture-handler'\r\nimport { Keyboard } from 'react-native'\r\nimport { auth, db } from '../firebase'\r\nimport * as firebase from 'firebase'\r\n\r\n\r\nexport default function ChatScreen({ navigation, route}) {\r\n\r\n    const {chatName, id} = route.params\r\n\r\n    const [input, setInput] = useState(\"\")\r\n\r\n    const [messages, setMessages] = useState([])\r\n\r\n    \r\n\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: chatName,\r\n            headerBackTitleVisible: true,\r\n            headerTitleAlgin: \"left\",\r\n            headerTitle: () => (\r\n                <View style={{\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                }}>\r\n                    <Avatar rounded source={{\r\n                        uri: messages[0]?.data.photoURL || 'https://d1w8cc2yygc27j.cloudfront.net/-2291064301122165519/-6907002593267796194.jpg'\r\n                    }}></Avatar>\r\n                    <Text\r\n                        style={{ color: \"black\", marginLeft: 10, fontWeight: \"700\"}}\r\n                    >{chatName}</Text>\r\n                </View>\r\n            ),\r\n\r\n            headerLeft: () => (\r\n                <TouchableOpacity\r\n                    style={{ marginLeft: 10}}\r\n                    onPress={navigation.goBack}\r\n                >\r\n                    <AntDesign name=\"arrowleft\" size={24} color=\"black\"></AntDesign>\r\n                </TouchableOpacity>\r\n            ),\r\n\r\n            headerRight: () => (\r\n                <View \r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                        width: 80,\r\n                        marginRight: 20,\r\n                    }}\r\n                >\r\n                    <TouchableOpacity>\r\n                        <FontAwesome name=\"video-camera\" size={24} color=\"black\"></FontAwesome>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity>\r\n                        <Ionicons name=\"call\" size={24} color=\"black\"></Ionicons>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n\r\n        })\r\n\r\n    }, [navigation, messages])\r\n\r\n    function sendMessage(){\r\n        Keyboard.dismiss()\r\n\r\n        db.collection('chats')\r\n        .doc(id)\r\n        .collection('messages')\r\n        .add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: input,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL,\r\n        })\r\n\r\n        setInput('')\r\n\r\n\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db.collection('chats')\r\n                            .doc(id).collection('messages')\r\n                            .orderBy('timestamp')\r\n                            .onSnapshot((snapshot) => setMessages(snapshot.docs.map(doc => ({\r\n                                id: doc.id,\r\n                                data: doc.data()\r\n                            }))))\r\n\r\n        return unsubscribe;\r\n    }, [route])\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1, backgroundColor: \"white\"}}>\r\n            <StatusBar style=\"light\"></StatusBar>\r\n            \r\n            \r\n            <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\": \"height\"}\r\n                style={styles.container}\r\n                keyboardVerticalOffset={100}\r\n            >\r\n                <>\r\n                    <ScrollView contentContainerStyle={{ paddingTop: 20}}>\r\n                        {messages.map(({id, data}) => (\r\n                            data.email === auth.currentUser.email ? (\r\n                                <View key={id} style={styles.reciver}>\r\n                                    <Avatar \r\n                                        position=\"absolute\"\r\n                                        rounded\r\n                                        bottom={-15}\r\n                                        right={-5}\r\n                                        size={30}\r\n                                        source={{uri: data.photoURL}}\r\n                                    ></Avatar>\r\n                                    <Text style={styles.reciverText}>{data.message}</Text>\r\n                                </View>\r\n                            ): (\r\n                                <View key={id} style={styles.sender}>\r\n                                    <TouchableOpacity onPress={() => navigation.navigate(\"Profile\", {currentUser: data})}>\r\n                                    <Avatar \r\n                                        position=\"absolute\"\r\n                                        rounded\r\n                                        bottom={-15}\r\n                                        right={-5}\r\n                                        size={30}\r\n                                        source={{uri: data.photoURL}}\r\n\r\n                                    ></Avatar>\r\n                                    </TouchableOpacity>\r\n                                    <Text style={styles.senderText}>{data.message}</Text>\r\n                                    <Text style={styles.senderName}>{data.displayName}</Text>\r\n                                </View>\r\n\r\n                            )\r\n                        ))}\r\n\r\n                    </ScrollView>\r\n\r\n                    <View style={styles.footer}>\r\n                        <TextInput \r\n                        value={input}\r\n                        onChangeText={(text) => setInput(text)}\r\n                        onSubmitEditing={sendMessage}\r\n                        placeholder=\"Message..\" \r\n                        style={styles.textInput}\r\n                        \r\n                        ></TextInput>\r\n\r\n                        <TouchableOpacity \r\n                        onPress={sendMessage}\r\n                        >\r\n                            <Ionicons name=\"send\" size={24}  color=\"#2b68E6\"></Ionicons>\r\n\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                </>\r\n                \r\n\r\n\r\n            </KeyboardAvoidingView>\r\n\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n\r\n    },\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 15\r\n    },\r\n    textInput: {\r\n        bottom: 0,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n\r\n    reciverText: {\r\n        color: \"black\",\r\n        fontWeight: \"500\",\r\n        marginLeft: 10,\r\n\r\n\r\n    },\r\n\r\n    senderText: {\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n        marginLeft: 10,\r\n        marginBottom: 15,\r\n\r\n    },\r\n\r\n    reciver: {\r\n        padding: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        alignSelf: \"flex-end\",\r\n        borderRadius: 20,\r\n        marginRight: 15,\r\n        marginBottom: 20,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\",\r\n\r\n    },\r\n\r\n    sender: {\r\n        padding: 15,\r\n        backgroundColor: \"#2B68E6\",\r\n        alignSelf: \"flex-start\",\r\n        borderRadius: 20,\r\n        margin: 15,\r\n        maxWidth: \"80%\",\r\n        position: \"relative\",\r\n\r\n    },\r\n\r\n    senderName: {\r\n        left: 10,\r\n        paddingRight: 10,\r\n        fontSize: 10,\r\n        color: \"white\",\r\n        \r\n\r\n    },\r\n\r\n    \r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}