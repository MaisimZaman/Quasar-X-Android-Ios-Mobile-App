{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Post\\\\SaveImage.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport firebase from 'firebase';\nimport { auth, db } from \"../../services/firebase\";\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var picture = props.route.params.image;\n\n  function uploadImage(isStory) {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                if (isStory) {\n                  saveStoryData(snapshot);\n                } else {\n                  savePostData(snapshot);\n                }\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function saveStoryData(downloadURL) {\n    return _regeneratorRuntime.async(function saveStoryData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"stories\").add({\n              user: auth.currentUser.uid,\n              downloadURL: downloadURL,\n              creation: firebase.firestore.FieldValue.serverTimestamp()\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var savePostData = function savePostData(downloadURL) {\n    return _regeneratorRuntime.async(function savePostData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('posts').doc(auth.currentUser.uid).collection(\"userPosts\").add({\n              downloadURL: downloadURL,\n              caption: caption,\n              likesCount: 0,\n              creation: firebase.firestore.FieldValue.serverTimestamp()\n            }).then(function () {\n              props.navigation.goBack();\n            }));\n\n          case 2:\n            props.navigation.goBack();\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, React.createElement(TextInput, {\n    value: caption,\n    placeholder: \"Write Your Caption....\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    style: {\n      color: \"black\",\n      fontSize: 22\n    },\n    multiline: true,\n    autoFocus: true,\n    selectionColor: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, React.createElement(Button, {\n    title: \"Post\",\n    style: styles.button,\n    appearance: \"filled\",\n    onPress: function onPress() {\n      return uploadImage(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    title: \"Set as Story\",\n    style: styles.button,\n    appearance: \"filled\",\n    onPress: function onPress() {\n      return uploadImage(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    bottom: 0,\n    flex: 1,\n    marginRight: 15,\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  },\n  container: {\n    flex: 1,\n    color: \"white\",\n    padding: 30,\n    paddingTop: 80,\n    width: Dimensions.get(\"window\").width\n  },\n  bottom: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    marginBottom: 36\n  },\n  button: {\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Post/SaveImage.js"],"names":["React","useState","firebase","auth","db","require","Save","props","caption","setCaption","picture","route","params","image","uploadImage","isStory","uri","childPath","currentUser","uid","Math","random","toString","console","log","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","saveStoryData","savePostData","taskError","on","downloadURL","collection","add","user","creation","firestore","FieldValue","serverTimestamp","doc","likesCount","navigation","goBack","styles","container","color","fontSize","Platform","OS","bottom","button","StyleSheet","create","textInput","flex","marginRight","padding","borderRadius","paddingTop","width","Dimensions","get","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, TextInput, Image, Button,  Text, StyleSheet, Dimensions, KeyboardAvoidingView } from 'react-native'\r\n//import { Button } from \"@ui-kitten/components\"\r\n\r\nimport firebase from 'firebase'\r\nimport {auth, db} from '../../services/firebase'\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\n\r\n\r\nexport default function Save(props) {\r\n    const [caption, setCaption] = useState(\"\")\r\n\r\n    const picture = props.route.params.image;\r\n\r\n    \r\n\r\n    async function uploadImage(isStory){\r\n        const uri = props.route.params.image;\r\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n        console.log(childPath)\r\n\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n\r\n        const task = firebase\r\n            .storage()\r\n            .ref()\r\n            .child(childPath)\r\n            .put(blob);\r\n\r\n        const taskProgress = snapshot => {\r\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n        }\r\n\r\n        const taskCompleted = () => {\r\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n                if (isStory){\r\n                    saveStoryData(snapshot)\r\n\r\n                }\r\n                else {\r\n                    savePostData(snapshot);\r\n\r\n                }\r\n                \r\n                \r\n            })\r\n        }\r\n\r\n        const taskError = snapshot => {\r\n            console.log(snapshot)\r\n        }\r\n\r\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n    }\r\n\r\n    async function saveStoryData(downloadURL){\r\n        await db.collection(\"stories\").add({\r\n            user: auth.currentUser.uid,\r\n            downloadURL: downloadURL,\r\n            creation: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const savePostData = async (downloadURL)  => {\r\n\r\n        await db.collection('posts')\r\n            .doc(auth.currentUser.uid)\r\n            .collection(\"userPosts\")\r\n            .add({\r\n                downloadURL,\r\n                caption,\r\n                likesCount: 0,\r\n                creation: firebase.firestore.FieldValue.serverTimestamp()\r\n            }).then((function () {\r\n                props.navigation.goBack()\r\n            }))\r\n        props.navigation.goBack()\r\n    }\r\n\r\n    \r\n    return (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<TextInput\r\n\t\t\t\tvalue={caption}\r\n                placeholder=\"Write Your Caption....\"\r\n\t\t\t\tonChangeText={(caption) => setCaption(caption)}\r\n\t\t\t\tstyle={{ color: \"black\", fontSize: 22 }}\r\n\t\t\t\tmultiline={true}\r\n\t\t\t\tautoFocus\r\n\t\t\t\tselectionColor=\"#fff\"\r\n\t\t\t/>\r\n\t\t\t<KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={styles.bottom}>\r\n\t\t\t\t<Button title=\"Post\" style={styles.button} appearance=\"filled\" onPress={() => uploadImage(false)}>\r\n\t\t\t\t</Button>\r\n                <Button title=\"Set as Story\" style={styles.button} appearance=\"filled\" onPress={() => uploadImage(true)}>\r\n\t\t\t\t</Button>\r\n\t\t\t</KeyboardAvoidingView>\r\n\t\t</View>\r\n\t)\r\n\r\n\r\n   \r\n\r\n   \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        bottom: 0,\r\n        flex: 1,\r\n        marginRight: 15,\r\n       \r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n    container: {\r\n\t\tflex: 1,\r\n\t\t//backgroundColor: \"#222B45\",\r\n\t\tcolor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tpaddingTop: 80,\r\n\r\n\t\twidth: Dimensions.get(\"window\").width\r\n\t},\r\n\tbottom: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tmarginBottom: 36\r\n\t},\r\n\tbutton: {\r\n\t\tmarginBottom: 30\r\n\t}\r\n})\r\n"]},"metadata":{},"sourceType":"module"}