{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Profile\\\\followingScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { auth, db } from \"../../services/firebase\";\nimport { CardItem, Left, Thumbnail, Body } from 'native-base';\nimport { Text } from 'react-native-elements';\nexport default function followingScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      followingList = _useState2[0],\n      setFollowingList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var _props$route$params = props.route.params,\n      userId = _props$route$params.userId,\n      userName = _props$route$params.userName;\n  useEffect(function () {\n    var unsubscribe = function unsubscribe() {\n      db.collection('following').doc(userId).collection('userFollowing').orderBy('timestamp', 'desc').onSnapshot(function (snapshot) {\n        return setFollowingList(snapshot.docs.map(function (doc) {\n          return {\n            id: doc.id,\n            data: doc.data()\n          };\n        }));\n      });\n      db.collection('users').onSnapshot(function (snapshot) {\n        return setUserData(snapshot.docs.map(function (doc) {\n          return {\n            uid: doc.id,\n            data: doc.data()\n          };\n        }));\n      });\n    };\n\n    unsubscribe();\n  }, []);\n\n  function getUserData(uid) {\n    if (userData.length > 0) {\n      var Info = userData.filter(function (value) {\n        return value.uid == uid;\n      })[0].data;\n      return Info;\n    } else {\n      return 'null';\n    }\n  }\n\n  function renderPerson(userid) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Profile\", {\n          currentUser: getUserData(userid)\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, React.createElement(CardItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, React.createElement(Left, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, React.createElement(Thumbnail, {\n      source: {\n        uri: getUserData(userid).photoURL\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), React.createElement(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      h5: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, getUserData(userid).displayName, \" \"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, getUserData(userid).email))))));\n  }\n\n  function renderFollowing() {\n    return followingList.map(function (_ref) {\n      var id = _ref.id,\n          data = _ref.data;\n      return renderPerson(data.userId);\n    });\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, userName, \" Follows: \"), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, renderFollowing()));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Profile/followingScreen.js"],"names":["React","useEffect","useState","ScrollView","auth","db","CardItem","Left","Thumbnail","Body","Text","followingScreen","props","followingList","setFollowingList","userData","setUserData","route","params","userId","userName","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","uid","getUserData","length","Info","filter","value","renderPerson","userid","navigation","navigate","currentUser","uri","photoURL","displayName","email","renderFollowing","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { StyleSheet, View, TouchableOpacity } from 'react-native'\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { auth, db } from '../../services/firebase';\r\nimport { CardItem, Left, Thumbnail, Body } from 'native-base';\r\nimport { Text } from 'react-native-elements';\r\n\r\n\r\nexport default function followingScreen(props) {\r\n\r\n    const [followingList, setFollowingList ] = useState([])\r\n\r\n    const [userData, setUserData] = useState([])\r\n\r\n    const {userId, userName} = props.route.params;\r\n\r\n    useEffect(() => {\r\n        const unsubscribe  = () => {\r\n\r\n            db.collection('following')\r\n                    .doc(userId).collection('userFollowing')\r\n                    .orderBy('timestamp', 'desc')\r\n                    .onSnapshot((snapshot) => setFollowingList(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n            }))))\r\n\r\n            db.collection('users')\r\n            .onSnapshot((snapshot) => setUserData(snapshot.docs.map(doc => ({\r\n            uid: doc.id,\r\n            data: doc.data()\r\n            }))))\r\n    \r\n    \r\n        }\r\n\r\n        unsubscribe()\r\n    }, [])\r\n\r\n    function getUserData(uid){\r\n        if (userData.length > 0){\r\n            var Info = userData.filter(function(value){\r\n                return value.uid == uid\r\n            })[0].data\r\n\r\n            return Info\r\n        }\r\n        else {\r\n            return 'null'\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    function renderPerson(userid){\r\n        \r\n        \r\n \r\n\r\n\r\n        \r\n\r\n        return (\r\n            <View>\r\n                <TouchableOpacity\r\n                        onPress={() => props.navigation.navigate(\"Profile\", {\r\n                            currentUser: getUserData(userid)\r\n                        })}>\r\n            <CardItem>\r\n        <Left>\r\n            <Thumbnail source={{uri: getUserData(userid).photoURL}} />\r\n\r\n            <Body>\r\n                <Text h5>{getUserData(userid).displayName} </Text>\r\n                <Text>{getUserData(userid).email}</Text>\r\n            </Body>\r\n        </Left>\r\n        </CardItem>\r\n        </TouchableOpacity>\r\n        </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    function renderFollowing(){\r\n\r\n\r\n        return (\r\n            followingList.map(({id, data}) => (\r\n                 renderPerson(data.userId)  \r\n            ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text h4>{userName} Follows: </Text>\r\n            <ScrollView>\r\n                \r\n                {renderFollowing()}\r\n                \r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n})\r\n"]},"metadata":{},"sourceType":"module"}