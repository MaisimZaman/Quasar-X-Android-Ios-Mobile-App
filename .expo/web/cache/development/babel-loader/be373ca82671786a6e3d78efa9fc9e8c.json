{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Profile\\\\NotificationScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { auth, db } from \"../../services/firebase\";\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon, Container } from 'native-base';\nexport default function NotificationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe = db.collection('notifications').doc(auth.currentUser.uid).collection('userNotifications').orderBy('timestamp', 'desc').onSnapshot(function (snapshot) {\n      return setNotifications(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, []);\n\n  function renderNotification(item) {\n    if (item.data.type == \"comment\") {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Post-Detail\", {\n            id: item.data.postId,\n            posterName: auth.currentUser.displayName,\n            PosterId: auth.currentUser.uid,\n            posterProfilePic: auth.currentUser.photoURL,\n            image: item.data.image,\n            caption: item.caption\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, React.createElement(CardItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(Left, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(Thumbnail, {\n        source: {\n          uri: item.data.profilePicture\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), React.createElement(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        h5: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, item.data.commenterName + \" commented: \", \" \"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, item.data.comment))), React.createElement(Right, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: {\n          paddingRight: 10,\n          height: 70,\n          width: 70\n        },\n        source: {\n          uri: item.data.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      })))));\n    } else if (item.data.type == \"follow\") {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Profile\", {\n            currentUser: {\n              displayName: item.data.followerName,\n              email: item.data.followerEmail,\n              photoURL: item.data.profilePicture,\n              uid: item.data.followerId\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(CardItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, React.createElement(Left, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(Thumbnail, {\n        source: {\n          uri: item.data.profilePicture\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), React.createElement(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        h5: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, item.data.followerName, \" has followed you\"))))));\n    }\n  }\n\n  if (notifications.length == 0) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"You have no notifications yet\"));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: notifications,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return renderNotification(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Profile/NotificationScreen.js"],"names":["React","useEffect","useState","auth","db","Card","CardItem","Thumbnail","Body","Left","Right","Button","Icon","Container","NotificationScreen","navigation","notifications","setNotifications","unsubscribe","collection","doc","currentUser","uid","orderBy","onSnapshot","snapshot","docs","map","id","data","renderNotification","item","type","navigate","postId","posterName","displayName","PosterId","posterProfilePic","photoURL","image","caption","uri","profilePicture","commenterName","comment","paddingRight","height","width","followerName","email","followerEmail","followerId","length","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { StyleSheet, Text, View, TouchableOpacity, Image, FlatList } from 'react-native'\r\nimport { auth, db } from '../../services/firebase';\r\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon, Container} from 'native-base'\r\n\r\nexport default function NotificationScreen({navigation}) {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('notifications')\r\n                    .doc(auth.currentUser.uid)\r\n                    .collection('userNotifications')\r\n                    .orderBy('timestamp', 'desc')\r\n                    .onSnapshot((snapshot) => setNotifications(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n        }))))\r\n\r\n        return unsubscribe\r\n\r\n        \r\n    }, [])\r\n\r\n    function renderNotification(item){\r\n\r\n        \r\n\r\n        //console.log(item)\r\n\r\n        if (item.data.type == \"comment\"){\r\n            return (\r\n                <View>\r\n                    <TouchableOpacity\r\n                            onPress={() => navigation.navigate(\"Post-Detail\", {\r\n                                id: item.data.postId,\r\n                                posterName: auth.currentUser.displayName,\r\n                                PosterId: auth.currentUser.uid,\r\n                                posterProfilePic: auth.currentUser.photoURL,\r\n                                image: item.data.image,\r\n                                caption: item.caption\r\n\r\n                            })}>\r\n                <CardItem>\r\n            <Left>\r\n                <Thumbnail source={{uri: item.data.profilePicture }} />\r\n    \r\n                <Body>\r\n                    <Text h5>{item.data.commenterName + \" commented: \"} </Text>\r\n                    <Text>{item.data.comment}</Text>\r\n                </Body>\r\n            </Left>\r\n\r\n            <Right>\r\n                <Image style={{paddingRight: 10, height: 70, width: 70}} source={{uri: item.data.image}} />\r\n            </Right>\r\n            </CardItem>\r\n            </TouchableOpacity>\r\n            </View>\r\n            )\r\n\r\n        }\r\n\r\n        else if (item.data.type == \"follow\"){\r\n            return (\r\n                <View>\r\n                <TouchableOpacity\r\n                        onPress={() => navigation.navigate(\"Profile\", {\r\n                            currentUser: {\r\n                                displayName: item.data.followerName,\r\n                                email: item.data.followerEmail,\r\n                                photoURL: item.data.profilePicture,\r\n                                uid: item.data.followerId\r\n                            }\r\n                            \r\n                        })}>\r\n            <CardItem>\r\n        <Left>\r\n            <Thumbnail source={{uri: item.data.profilePicture }} />\r\n\r\n            <Body>\r\n                <Text h5>{item.data.followerName} has followed you</Text>\r\n            </Body>\r\n        </Left>\r\n        </CardItem>\r\n        </TouchableOpacity>\r\n        </View>\r\n\r\n            )\r\n\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n    if (notifications.length == 0){\r\n        return (\r\n            <View>\r\n                <Text>You have no notifications yet</Text>\r\n               \r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <View>\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={notifications}\r\n                renderItem={({ item }) => (\r\n                  \r\n                   renderNotification(item)\r\n\r\n                )}\r\n                //onEndReached={endReached}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}