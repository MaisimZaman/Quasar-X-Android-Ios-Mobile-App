{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\CommentsPage.js\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base';\nimport { auth, db } from \"../firebase\";\nimport Comment from \"../components/Comment\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport * as firebase from 'firebase';\nimport { ScrollView, TextInput } from 'react-native-gesture-handler';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Text } from 'react-native-elements';\nexport default function CommentsPage(props) {\n  var _props$route$params = props.route.params,\n      posterProfilePic = _props$route$params.posterProfilePic,\n      posterUserName = _props$route$params.posterUserName,\n      posterCaption = _props$route$params.posterCaption,\n      postId = _props$route$params.postId;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comments = _useState4[0],\n      setComments = _useState4[1];\n\n  useLayoutEffect(function () {\n    var unsubscribe = db.collection('comments').doc(postId).collection('postComments').orderBy('timestamp').onSnapshot(function (snapshot) {\n      return setComments(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    return unsubscribe;\n  }, [props.route]);\n\n  function makeComment() {\n    db.collection('comments').doc(postId).collection('postComments').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      comment: commentText,\n      displayName: auth.currentUser.displayName,\n      photoURL: auth.currentUser.photoURL\n    });\n    setCommentText('');\n  }\n\n  function renderComments() {\n    var _this = this;\n\n    return comments.map(function (_ref) {\n      var id = _ref.id,\n          data = _ref.data;\n      return React.createElement(Comment, {\n        key: id,\n        ProfilePic: data.photoURL,\n        userName: data.displayName,\n        comment: data.comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(CardItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Left, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Thumbnail, {\n    source: {\n      uri: posterProfilePic\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, posterUserName, \" \"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, posterCaption)))), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Comments: \"), renderComments(), React.createElement(TextInput, {\n    value: commentText,\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setCommentText(text);\n    },\n    onSubmitEditing: makeComment,\n    placeholder: \"Comment..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return makeComment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"send\",\n    size: 24,\n    color: \"#2b68E6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15\n  },\n  textInput: {\n    bottom: 0,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/CommentsPage.js"],"names":["React","useState","useLayoutEffect","Card","CardItem","Thumbnail","Body","Left","Right","Button","Icon","auth","db","Comment","firebase","ScrollView","TextInput","Ionicons","Text","CommentsPage","props","route","params","posterProfilePic","posterUserName","posterCaption","postId","commentText","setCommentText","comments","setComments","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","makeComment","add","timestamp","firestore","FieldValue","serverTimestamp","comment","displayName","currentUser","photoURL","renderComments","uri","styles","textInput","text","StyleSheet","create","container","flex","footer","flexDirection","alignItems","width","padding","bottom","marginRight","backgroundColor","color","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect} from 'react'\r\nimport { View, TouchableOpacity, StyleSheet } from 'react-native'\r\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base'\r\nimport { auth, db } from \"../firebase\";\r\nimport Comment from '../components/Comment';\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { Keyboard } from 'react-native';\r\nimport * as firebase from 'firebase'\r\nimport { ScrollView, TextInput } from 'react-native-gesture-handler'\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Text } from 'react-native-elements';\r\n\r\n\r\nexport default function CommentsPage(props) {\r\n\r\n    const {posterProfilePic, posterUserName, posterCaption, postId} = props.route.params;\r\n\r\n    const [commentText, setCommentText] = useState('')\r\n\r\n    const [comments, setComments] = useState([]);\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db.collection('comments')\r\n                .doc(postId).collection('postComments')\r\n                .orderBy('timestamp')\r\n                .onSnapshot((snapshot) =>  setComments(snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data()\r\n                }))))\r\n\r\n        return unsubscribe;\r\n    }, [props.route])\r\n\r\n    function makeComment(){\r\n        //Keyboard.dismiss()\r\n\r\n        db.collection('comments')\r\n        .doc(postId)\r\n        .collection('postComments')\r\n        .add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            comment: commentText,\r\n            displayName: auth.currentUser.displayName,\r\n            photoURL: auth.currentUser.photoURL,\r\n        })\r\n\r\n     \r\n\r\n        setCommentText('')\r\n\r\n\r\n    }\r\n\r\n    function renderComments(){\r\n        return (\r\n            comments.map(({id, data}) => (\r\n                <Comment\r\n                    key={id}\r\n                    ProfilePic={data.photoURL}\r\n                    userName={data.displayName}\r\n                    comment={data.comment}\r\n                ></Comment>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView>\r\n            <CardItem>\r\n            <Left>\r\n            <Thumbnail source={{uri: posterProfilePic}} />\r\n\r\n            <Body>\r\n                <Text>{posterUserName} </Text>\r\n                <Text>{posterCaption}</Text>\r\n            </Body>\r\n            </Left>\r\n        </CardItem>\r\n\r\n        <ScrollView>\r\n        <Text h3>Comments: </Text>\r\n        {renderComments()}\r\n        \r\n\r\n        <TextInput \r\n            value={commentText}\r\n            style={styles.textInput}\r\n            onChangeText={(text) => setCommentText(text)}\r\n            onSubmitEditing={makeComment}\r\n            placeholder=\"Comment..\" \r\n                        \r\n        ></TextInput>\r\n\r\n\r\n        <TouchableOpacity \r\n                onPress={() => makeComment()}\r\n                >\r\n            <Ionicons name=\"send\" size={24}  color=\"#2b68E6\"></Ionicons>\r\n\r\n        </TouchableOpacity>\r\n\r\n        </ScrollView>\r\n\r\n        \r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n\r\n    },\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        padding: 15\r\n    },\r\n    textInput: {\r\n        bottom: 0,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n\r\n    \r\n\r\n    \r\n\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}