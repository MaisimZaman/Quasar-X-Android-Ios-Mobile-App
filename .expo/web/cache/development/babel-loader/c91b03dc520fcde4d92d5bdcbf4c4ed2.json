{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Video\\\\VideoExplore.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styled from 'styled-components/native';\nimport Header from \"../../components/VideoComponents/Header\";\nimport Hero from \"../../components/VideoComponents/Hero\";\nimport Tabs from \"../../components/VideoComponents/Tabs\";\nimport { auth, db } from \"../../services/firebase\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tflex: 1;\\n\\tbackground: transparent;\\n\"])));\nexport default function VideoExplore(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allVideos = _useState2[0],\n      setAllVideos = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribe2 = function unsubscribe2() {\n      var addPostToState, exectuueOrder;\n      return _regeneratorRuntime.async(function unsubscribe2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              exectuueOrder = function _exectuueOrder(arr) {\n                if (allVideos < 16) {\n                  arr.forEach(addPostToState);\n                }\n              };\n\n              addPostToState = function _addPostToState(item, index, arr) {\n                return _regeneratorRuntime.async(function addPostToState$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(db.collection(\"videos\").doc(item.userId).collection(\"userVideos\").onSnapshot(function (snapshot) {\n                          setAllVideos(function (allVideos) {\n                            return _toConsumableArray(allVideos).concat(snapshot.docs.map(function (doc) {\n                              return {\n                                id: doc.id,\n                                user: item.userInfo,\n                                data: doc.data()\n                              };\n                            }));\n                          });\n                        }));\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"users\").onSnapshot(function (snapshot) {\n                return exectuueOrder(snapshot.docs.map(function (doc) {\n                  return {\n                    userId: doc.data().uid,\n                    userInfo: doc.data()\n                  };\n                }));\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    unsubscribe2();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }), React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), React.createElement(Hero, {\n    videos: allVideos,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Video/VideoExplore.js"],"names":["React","useEffect","useState","useRef","styled","Header","Hero","Tabs","auth","db","Container","View","VideoExplore","navigation","allVideos","setAllVideos","unsubscribe2","addPostToState","exectuueOrder","arr","forEach","item","index","collection","doc","userId","onSnapshot","snapshot","concat","docs","map","id","user","userInfo","data","uid"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;;AAIA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,SAASC,IAAT,EAAeC,EAAf;AAIA,IAAMC,SAAS,GAAGN,MAAM,CAACO,IAAV,oHAAf;AAKA,eAAe,SAASC,YAAT,OAAqC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAEnD,kBAAkCX,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AAEGd,EAAAA,SAAS,CAAC,YAAM;AAGZ,QAAMe,YAAY,GAAG,SAAfA,YAAe;AAAA,UAGFC,cAHE,EAuBRC,aAvBQ;AAAA;AAAA;AAAA;AAAA;AAuBRA,cAAAA,aAvBQ,2BAuBMC,GAvBN,EAuBU;AACvB,oBAAIL,SAAS,GAAG,EAAhB,EAAmB;AACfK,kBAAAA,GAAG,CAACC,OAAJ,CAAYH,cAAZ;AAEH;AAEJ,eA7BgB;;AAGFA,cAAAA,cAHE,4BAGaI,IAHb,EAGmBC,KAHnB,EAG0BH,GAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAIPV,EAAE,CAACc,UAAH,CAAc,QAAd,EACLC,GADK,CACDH,IAAI,CAACI,MADJ,EAELF,UAFK,CAEM,YAFN,EAGLG,UAHK,CAGM,UAACC,QAAD,EAAc;AACtBZ,0BAAAA,YAAY,CAAC,UAAAD,SAAS;AAAA,mCAAI,mBAAIA,SAAJ,EAAec,MAAf,CACtBD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAN,GAAG;AAAA,qCAAK;AACtBO,gCAAAA,EAAE,EAAEP,GAAG,CAACO,EADc;AAEtBC,gCAAAA,IAAI,EAAEX,IAAI,CAACY,QAFW;AAGtBC,gCAAAA,IAAI,EAAEV,GAAG,CAACU,IAAJ;AAHgB,+BAAL;AAAA,6BAArB,CADsB,CAAJ;AAAA,2BAAV,CAAZ;AAUH,yBAdK,CAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAiCXzB,EAAE,CAACc,UAAH,CAAc,OAAd,EACLG,UADK,CACM,UAACC,QAAD;AAAA,uBAAcT,aAAa,CAACS,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAAAN,GAAG,EAAI;AAC7D,yBAAO;AAACC,oBAAAA,MAAM,EAAED,GAAG,CAACU,IAAJ,GAAWC,GAApB;AAAyBF,oBAAAA,QAAQ,EAAET,GAAG,CAACU,IAAJ;AAAnC,mBAAP;AAGH,iBAJuC,CAAD,CAA3B;AAAA,eADN,CAjCW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AA8CJlB,IAAAA,YAAY;AAIX,GArDQ,EAqDN,EArDM,CAAT;AAwDH,SACC,0CACC,oBAAC,SAAD;AACC,IAAA,WAAW,MADZ;AAEC,IAAA,eAAe,EAAC,aAFjB;AAGC,IAAA,QAAQ,EAAC,eAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAGC,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEF,SAAd;AAAyB,IAAA,UAAU,EAAED,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAOC,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAND,CADD;AAoBA","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\n\r\nimport { StatusBar } from 'react-native'\r\n\r\nimport styled from 'styled-components/native'\r\n\r\nimport Header from '../../components/VideoComponents/Header'\r\nimport Hero from '../../components/VideoComponents/Hero'\r\nimport Tabs from '../../components/VideoComponents/Tabs'\r\nimport { auth, db } from '../../services/firebase'\r\n\r\n\r\n\r\nconst Container = styled.View`\r\n\tflex: 1;\r\n\tbackground: transparent;\r\n`\r\n\r\nexport default function VideoExplore({ navigation }){\r\n\r\n\tconst [allVideos, setAllVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        const unsubscribe2 = async () => {\r\n\r\n\r\n            async function addPostToState(item, index, arr){\r\n                await db.collection(\"videos\")\r\n                .doc(item.userId)\r\n                .collection(\"userVideos\")\r\n                .onSnapshot((snapshot) => {\r\n                    setAllVideos(allVideos => [...allVideos].concat(\r\n                        snapshot.docs.map(doc => ({\r\n                            id: doc.id,\r\n                            user: item.userInfo,\r\n                            data: doc.data()\r\n\r\n                        }))\r\n\r\n\r\n                    ))\r\n                })\r\n            \r\n\r\n            }\r\n\r\n            function exectuueOrder(arr){\r\n                if (allVideos < 16){\r\n                    arr.forEach(addPostToState)\r\n\r\n                }\r\n    \r\n            }\r\n\r\n            \r\n\r\n            await db.collection(\"users\")\r\n            .onSnapshot((snapshot) => exectuueOrder(snapshot.docs.map(doc => {\r\n                return {userId: doc.data().uid, userInfo: doc.data()}\r\n                \r\n\r\n            })))   \r\n                \r\n        }\r\n            \r\n        \r\n        \r\n\r\n    \r\n    unsubscribe2()\r\n    \r\n    \r\n\r\n    }, [])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StatusBar\r\n\t\t\t\ttranslucent\r\n\t\t\t\tbackgroundColor='transparent'\r\n\t\t\t\tbarStyle='light-content'\r\n\t\t\t/>\r\n\t\t\t<Container>\r\n\t\t\t\t<Header />\r\n             \r\n\t\t\t\t<Hero videos={allVideos} navigation={navigation}/>\r\n\r\n                \r\n                \r\n\t\t\t\t<Tabs navigation={navigation} />\r\n\t\t\t</Container>\r\n\r\n            \r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}