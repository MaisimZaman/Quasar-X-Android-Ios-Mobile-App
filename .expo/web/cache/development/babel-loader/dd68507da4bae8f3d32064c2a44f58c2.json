{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Profile\\\\StoryScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Image } from 'react-native-elements/dist/image/Image';\nimport { auth, db } from \"../../services/firebase\";\nimport VideoPlayer from \"../../components/VideoComponents/VideoPlayer\";\nimport Video from 'react-native-video';\nexport default function StoryScreen(props) {\n  var _props$route$params = props.route.params,\n      userID = _props$route$params.userID,\n      type = _props$route$params.type;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      storyImage = _useState2[0],\n      setStoryImage = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stage = _useState4[0],\n      setStage = _useState4[1];\n\n  setInterval(function () {\n    setStage(stage + 1);\n\n    if (stage == 2) {\n      props.navigation.goBack();\n    }\n  }, 10000);\n  useEffect(function () {\n    var unsubscribe = function unsubscribe() {\n      db.collection(\"stories\").where(\"user\", \"==\", userID).get().then(function (snap) {\n        snap.forEach(function (doc) {\n          setStoryImage(doc.data().downloadURL);\n        });\n      }).catch(function (e) {\n        alert(e);\n      });\n    };\n\n    unsubscribe();\n  }, []);\n\n  function renderChoice() {\n    if (type == \"image\") {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, storyImage), React.createElement(Image, {\n        source: {\n          uri: storyImage\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(VideoPlayer, {\n        video: storyImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  if (storyImage == undefined) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"No Story yet\");\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: storyImage\n    },\n    style: {\n      width: 320,\n      height: 300,\n      top: 200,\n      left: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Profile/StoryScreen.js"],"names":["React","useState","useEffect","Image","auth","db","VideoPlayer","Video","StoryScreen","props","route","params","userID","type","storyImage","setStoryImage","stage","setStage","setInterval","navigation","goBack","unsubscribe","collection","where","get","then","snap","forEach","doc","data","downloadURL","catch","e","alert","renderChoice","uri","undefined","width","height","top","left","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Image } from 'react-native-elements/dist/image/Image';\r\nimport { auth, db } from '../../services/firebase';\r\nimport VideoPlayer from '../../components/VideoComponents/VideoPlayer';\r\nimport Video from 'react-native-video';\r\n\r\nexport default function StoryScreen(props) {\r\n    const {userID, type} = props.route.params;\r\n\r\n    const [storyImage, setStoryImage] = useState('')\r\n\r\n    const [stage, setStage] = useState(0)\r\n\r\n\r\n\r\n    setInterval(() => {\r\n        setStage(stage + 1)\r\n\r\n        if (stage == 2){\r\n            props.navigation.goBack();\r\n        }\r\n        \r\n        \r\n    }, 10000);\r\n\r\n\r\n \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const unsubscribe = () =>  {\r\n            db.collection(\"stories\")\r\n            .where(\"user\", \"==\", userID).get()\r\n            .then((snap) => {\r\n\r\n                snap.forEach(doc => {\r\n                    setStoryImage(doc.data().downloadURL)\r\n                });\r\n\r\n                \r\n                \r\n\r\n            })\r\n            .catch(e => {\r\n                alert(e)\r\n            }\r\n        )}\r\n\r\n        unsubscribe()\r\n\r\n    }, [])\r\n\r\n    function renderChoice(){\r\n        if (type == \"image\"){\r\n            return (\r\n                <View>\r\n                    <Text>{storyImage}</Text>\r\n        \r\n                    <Image\r\n                        source={{ uri: storyImage}}\r\n                    >\r\n                    </Image>\r\n                </View>\r\n            )\r\n\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <View>\r\n                    <VideoPlayer\r\n                        video={storyImage}\r\n                    ></VideoPlayer>\r\n\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n    if (storyImage == undefined){\r\n        return (\r\n            <Text>No Story yet</Text>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View>\r\n\r\n            <Image\r\n                source={{ uri: storyImage}}\r\n                style={{width: 320, height: 300, top: 200, left: 10}}\r\n            >\r\n            </Image>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n"]},"metadata":{},"sourceType":"module"}