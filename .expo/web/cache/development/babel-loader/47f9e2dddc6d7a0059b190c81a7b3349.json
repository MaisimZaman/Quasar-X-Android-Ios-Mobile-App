{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\SearchScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from 'firebase';\nimport { auth, db } from \"../firebase\";\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base';\n\nrequire('firebase/firestore');\n\nexport default function SearchScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usersList = _useState2[0],\n      setUsers = _useState2[1];\n\n  function fetchUsers(search) {\n    db.collection('users').where('displayName', '>=', search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  }\n\n  function renderPerson(item) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Profile\", {\n          currentUser: item\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, React.createElement(CardItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(Left, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, React.createElement(Thumbnail, {\n      source: {\n        uri: item.photoURL\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), React.createElement(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      h5: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, item.displayName, \" \"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, item.email))))));\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Seach for User...\",\n    onChangeText: function onChangeText(search) {\n      return fetchUsers(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: usersList,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return renderPerson(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  textInput: {\n    bottom: 0,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"grey\",\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/SearchScreen.js"],"names":["React","useState","firebase","auth","db","Card","CardItem","Thumbnail","Body","Left","Right","Button","Icon","require","SearchScreen","props","usersList","setUsers","fetchUsers","search","collection","where","get","then","snapshot","users","docs","map","doc","data","id","renderPerson","item","navigation","navigate","currentUser","uri","photoURL","displayName","email","styles","StyleSheet","create","textInput","bottom","flex","marginRight","backgroundColor","padding","color","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, TextInput, FlatList, TouchableOpacity, StyleSheet, ScrollView } from 'react-native'\r\nimport firebase from 'firebase'\r\nimport {auth, db } from '../firebase'\r\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base'\r\n\r\nrequire('firebase/firestore');\r\n\r\nexport default function SearchScreen(props) {\r\n    const [usersList, setUsers] = useState([])\r\n\r\n    function fetchUsers(search){\r\n        //console.warn(\"Function was called\")\r\n        db.collection('users')\r\n            .where('displayName', '>=', search)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                });\r\n                setUsers(users);\r\n        })\r\n\r\n \r\n       \r\n    }\r\n\r\n    function renderPerson(item){\r\n        return (\r\n            <View>\r\n                <TouchableOpacity\r\n                        onPress={() => props.navigation.navigate(\"Profile\", {\r\n                            currentUser: item\r\n                        })}>\r\n            <CardItem>\r\n        <Left>\r\n            <Thumbnail source={{uri: item.photoURL}} />\r\n\r\n            <Body>\r\n                <Text h5>{item.displayName} </Text>\r\n                <Text>{item.email}</Text>\r\n            </Body>\r\n        </Left>\r\n        </CardItem>\r\n        </TouchableOpacity>\r\n        </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <ScrollView>\r\n            <TextInput\r\n                //style={styles.textInput}\r\n                placeholder=\"Seach for User...\"\r\n                onChangeText={(search) => fetchUsers(search)} />\r\n\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={usersList}\r\n                renderItem={({ item }) => (\r\n                   renderPerson(item)\r\n\r\n                )}\r\n            />\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    textInput: {\r\n        bottom: 0,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding: 10,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}