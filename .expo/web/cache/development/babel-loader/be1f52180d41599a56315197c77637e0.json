{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\authentication\\\\LoginScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Button, Input, Image } from 'react-native-elements';\nimport { StatusBar } from 'expo-status-bar';\nimport { auth } from \"../../services/firebase\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (authUser) {\n      if (authUser) {\n        navigation.replace(\"Main\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  function signIn() {\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      return alert(error);\n    });\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    enabled: true,\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Image, {\n    source: require(\"../../services/assets/mainlogo.png\"),\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email\",\n    autoFocus: true,\n    type: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Passowrd\",\n    secureTextEntry: true,\n    type: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    onSubmitEditing: signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    onPress: signIn,\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    containerStyle: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    },\n    type: \"outline\",\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/authentication/LoginScreen.js"],"names":["React","useState","useEffect","Button","Input","Image","StatusBar","auth","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","styles","container","require","width","height","inputContainer","text","button","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, View, Text, KeyboardAvoidingView} from 'react-native'\r\nimport { Button, Input, Image } from 'react-native-elements'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { auth } from '../../services/firebase'\r\n\r\n\r\nexport default function LoginScreen({ navigation }){\r\n\r\n    const [email, setEmail]  = useState(\"\");\r\n    const [password, setPassword ] = useState(\"\");\r\n\r\n \r\n    \r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n            if (authUser){\r\n                navigation.replace(\"Main\"); \r\n\r\n            }\r\n\r\n        });\r\n\r\n        return unsubscribe;\r\n        \r\n    }, [])\r\n    \r\n\r\n    function signIn(){\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .catch(error => alert(error))\r\n\r\n        //console.log(\"This is a corrrect sign in\")\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        <KeyboardAvoidingView behavior=\"padding\" enabled style={styles.container}>\r\n            <StatusBar style=\"light\"></StatusBar>\r\n            <Image\r\n                source={\r\n                    require(\"../../services/assets/mainlogo.png\")\r\n                }\r\n\r\n                style={{width: 200, height: 200}}\r\n            ></Image>\r\n\r\n            <View style={styles.inputContainer}>\r\n                <Input \r\n                placeholder=\"Email\" \r\n                autoFocus \r\n                type=\"Email\" \r\n                value={email} \r\n                onChangeText={(text) => setEmail(text)} />\r\n                <Input \r\n                placeholder=\"Passowrd\"  \r\n                secureTextEntry   \r\n                type=\"password\" \r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n                onSubmitEditing={signIn}\r\n                />\r\n            </View>\r\n\r\n            <Button containerStyle={styles.button} onPress={signIn} title=\"Login\"></Button>\r\n            <Button containerStyle={styles.button} onPress={() => navigation.navigate(\"Register\")} type=\"outline\" title=\"Register\"></Button>\r\n            \r\n        </KeyboardAvoidingView>\r\n    )\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 10,\r\n        backgroundColor: \"white\",\r\n\r\n\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n\r\n\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n\r\n    },\r\n\r\n\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}