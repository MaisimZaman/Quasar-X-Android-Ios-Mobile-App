{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Chat\\\\AddChat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, Input } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { auth, db } from \"../../services/firebase\";\nimport { CardItem, Thumbnail, Body, Left, Right, Container } from 'native-base';\nexport default function AddChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchUsers = _useState4[0],\n      setSearchUsers = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState([auth.currentUser.uid]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chatMembers = _useState8[0],\n      setChatMembers = _useState8[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Create a new Group chat\"\n    });\n  }, [navigation]);\n\n  function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('chats').add({\n              chatName: input,\n              isDM: false,\n              admin: auth.currentUser.uid,\n              chatMembers: chatMembers,\n              groupPhoto: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4apNLOP0befEKu609F8yvMt_f-f7DVjNElhfMU2svKwmHjTCv7l-FNuor2rnCw33By5s&usqp=CAU\"\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function addChatMember(personInfo) {\n    if (chatMembers.includes(personInfo.uid) == false) {\n      setChatMembers(function (chatMembers) {\n        return [].concat(_toConsumableArray(chatMembers), [personInfo.uid]);\n      });\n    } else {\n      for (var i = 0; i < chatMembers.length; i++) {\n        if (chatMembers[i] === personInfo.uid) {\n          setChatMembers(function (chatMembers) {\n            return _toConsumableArray(chatMembers).splice(i);\n          });\n        }\n      }\n    }\n  }\n\n  function fetchUsers(search) {\n    db.collection('users').where('displayName', '>=', search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  }\n\n  function renderPerson(item) {\n    function itemStyle() {\n      if (chatMembers.includes(item.uid)) {\n        return {\n          backgroundColor: 'green'\n        };\n      } else {\n        return {\n          backgroundColor: 'white'\n        };\n      }\n    }\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return addChatMember(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, React.createElement(CardItem, {\n      style: itemStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, React.createElement(Left, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, React.createElement(Thumbnail, {\n      source: {\n        uri: item.photoURL\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), React.createElement(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      h5: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, item.displayName, \" \"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, item.email))))));\n  }\n\n  fetchUsers(searchUsers);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Enter a chat name\",\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    onSubmitEditing: createChat,\n    leftIcon: React.createElement(Icon, {\n      name: \"wechat\",\n      type: \"antdesign\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    disabled: input == '',\n    title: \"Create New Chat\",\n    onPress: createChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Seach for User...\",\n    onChangeText: function onChangeText(searchUsers) {\n      return setSearchUsers(searchUsers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    style: styles.userBox,\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return renderPerson(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  },\n  textInput: {\n    bottom: -20,\n    flex: 1,\n    marginRight: 15,\n    backgroundColor: \"#ECECEC\",\n    padding: 25,\n    color: \"grey\",\n    borderRadius: 30\n  },\n  userBox: {\n    bottom: -80\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Chat/AddChat.js"],"names":["React","useLayoutEffect","useState","Button","Input","Icon","auth","db","CardItem","Thumbnail","Body","Left","Right","Container","AddChat","navigation","input","setInput","searchUsers","setSearchUsers","users","setUsers","currentUser","uid","chatMembers","setChatMembers","setOptions","title","createChat","collection","add","chatName","isDM","admin","groupPhoto","then","goBack","catch","error","alert","addChatMember","personInfo","includes","i","length","splice","fetchUsers","search","where","get","snapshot","docs","map","doc","data","id","renderPerson","item","itemStyle","backgroundColor","uri","photoURL","displayName","email","styles","container","text","textInput","userBox","StyleSheet","create","padding","height","bottom","flex","marginRight","color","borderRadius"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from 'react'\r\nimport {View, Text, StyleSheet, TouchableOpacity, TextInput, FlatList } from 'react-native'\r\nimport { Button, Input } from 'react-native-elements'\r\nimport  Icon  from 'react-native-vector-icons/FontAwesome' ;\r\nimport { auth, db } from '../../services/firebase';\r\nimport { CardItem, Thumbnail, Body, Left, Right, Container} from 'native-base'\r\n\r\n\r\nexport default function AddChat({ navigation }) {\r\n\r\n    const [input, setInput] = useState('');\r\n    const [searchUsers, setSearchUsers] = useState('')\r\n    const [users, setUsers] = useState([]);\r\n    const [chatMembers, setChatMembers] =  useState([auth.currentUser.uid]);\r\n\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Create a new Group chat\",\r\n            \r\n        })\r\n        \r\n    }, [navigation])\r\n\r\n    async function createChat(){\r\n        await db.collection('chats').add({\r\n            chatName: input,\r\n            isDM: false,\r\n            admin: auth.currentUser.uid,\r\n            chatMembers: chatMembers,\r\n            groupPhoto: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4apNLOP0befEKu609F8yvMt_f-f7DVjNElhfMU2svKwmHjTCv7l-FNuor2rnCw33By5s&usqp=CAU\"\r\n\r\n\r\n        }).then(() => {\r\n            navigation.goBack()\r\n        }).catch(error => alert(error))\r\n\r\n        \r\n        \r\n    }\r\n\r\n    function addChatMember(personInfo){\r\n        if (chatMembers.includes(personInfo.uid) == false){\r\n            setChatMembers(chatMembers => [...chatMembers, personInfo.uid])\r\n        }\r\n        else {\r\n            for( var i = 0; i < chatMembers.length; i++){ \r\n                                   \r\n                if ( chatMembers[i] === personInfo.uid) { \r\n                    setChatMembers(chatMembers => [...chatMembers].splice(i))\r\n                }\r\n            }\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    function fetchUsers(search){\r\n        //console.warn(\"Function was called\")\r\n        db.collection('users')\r\n            .where('displayName', '>=', search)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let users = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n                });\r\n                setUsers(users);\r\n        })\r\n\r\n \r\n       \r\n    }\r\n\r\n    function renderPerson(item){\r\n\r\n        function itemStyle(){\r\n            if (chatMembers.includes(item.uid)){\r\n                return {backgroundColor:'green'} \r\n                \r\n            }\r\n            else {\r\n                return {backgroundColor:'white'}\r\n            }\r\n        }\r\n\r\n\r\n\r\n                        \r\n        return (\r\n            <View>\r\n\r\n            <TouchableOpacity onPress={() => addChatMember(item)}> \r\n                <CardItem style={itemStyle()}>\r\n            <Left>\r\n                <Thumbnail source={{uri: item.photoURL}} />\r\n\r\n                <Body>\r\n                    <Text h5>{item.displayName} </Text>\r\n                    <Text>{item.email}</Text>\r\n                </Body>\r\n            </Left>\r\n            </CardItem>\r\n            </TouchableOpacity> \r\n        \r\n            </View>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    fetchUsers(searchUsers)\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input \r\n                placeholder='Enter a chat name'\r\n                value={input}\r\n                onChangeText={(text) => setInput(text)}\r\n                onSubmitEditing={createChat}\r\n                leftIcon={\r\n                    <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\"/>\r\n                }\r\n\r\n            />\r\n\r\n            <Button disabled={input==''} title=\"Create New Chat\" onPress={createChat}></Button>\r\n\r\n            <TextInput\r\n                    style={styles.textInput}\r\n                    placeholder=\"Seach for User...\"\r\n                    onChangeText={(searchUsers) => setSearchUsers(searchUsers)} />\r\n\r\n\r\n            <FlatList\r\n                style={styles.userBox}\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={users}\r\n                renderItem={({ item }) => (\r\n                   renderPerson(item)\r\n\r\n                )}/>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"white\",\r\n        padding: 30,\r\n        height: \"100%\",\r\n\r\n    },\r\n    textInput: {\r\n        bottom: -20,\r\n        flex: 1,\r\n        marginRight: 15,\r\n        backgroundColor: \"#ECECEC\",\r\n        padding:25,\r\n        color: \"grey\",\r\n        borderRadius: 30,\r\n\r\n    },\r\n    userBox: {\r\n        bottom: -80,\r\n    }\r\n\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}