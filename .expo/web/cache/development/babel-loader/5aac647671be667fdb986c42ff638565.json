{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\screens\\\\Feed.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Content, Icon, Thumbnail, Header, Left, Right, Body } from 'native-base';\nimport PostCard from \"../components/PostCard\";\nimport { auth, db } from \"../firebase\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Stories from \"../components/Stories\";\nexport default function Feed(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userFollowing = _useState4[0],\n      setUserFollowing = _useState4[1];\n\n  var postsFor = auth.currentUser.uid;\n  useEffect(function () {\n    var postList = [];\n    db.collection('following').doc(postsFor).collection('userFollowing').orderBy('timestamp', 'desc').onSnapshot(function (snapshot) {\n      return setUserFollowing(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    var allPosts = [];\n\n    var _loop = function _loop(i) {\n      console.log(\"Posts\");\n      db.collection('posts').doc(userFollowing[i].data.userId).collection('userPosts').orderBy('creation', 'desc').onSnapshot(function (snapshot) {\n        var thisPosts = snapshot.docs.map(function (doc) {\n          return {\n            id: doc.id,\n            user: userFollowing[i].data.userId,\n            data: doc.data()\n          };\n        });\n\n        if (postList.length > 0) {\n          setPosts(posts.concat(thisPosts));\n        } else {\n          setPosts(thisPosts);\n        }\n      });\n    };\n\n    for (var i = 0; i < userFollowing.length; i++) {\n      _loop(i);\n    }\n  }, []);\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      picUrl = _useState8[0],\n      setPicUrl = _useState8[1];\n\n  function getphotoUrl(uid) {\n    db.collection(\"users\").doc(uid).get().then(function (doc) {\n      setPicUrl(doc.data().photoURL);\n    });\n    return picUrl;\n  }\n\n  function getDisplayName(uid) {\n    db.collection(\"users\").doc(uid).get().then(function (doc) {\n      setName(doc.data().displayName);\n    });\n    return name;\n  }\n\n  function renderPosts() {\n    var _this = this;\n\n    if (posts.length == 0) {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, \"Nothing on your feed yet\"));\n    }\n\n    return posts.map(function (_ref2) {\n      var id = _ref2.id,\n          user = _ref2.user,\n          data = _ref2.data;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Post-Detail\", {\n            id: id,\n            posterName: getDisplayName(user),\n            PosterId: user,\n            posterProfilePic: getphotoUrl(user),\n            image: data.downloadURL,\n            postDate: \"idk\",\n            caption: data.caption,\n            likes: data.likesCount\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, React.createElement(PostCard, {\n        key: id,\n        id: id,\n        posterName: getDisplayName(user),\n        posterProfilePic: getphotoUrl(user),\n        PosterID: user,\n        image: data.downloadURL,\n        postDate: data.creation,\n        caption: data.caption,\n        likes: data.likesCount,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }));\n    });\n  }\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, React.createElement(Stories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }), renderPosts())));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/screens/Feed.js"],"names":["React","useState","useEffect","Container","Content","Icon","Thumbnail","Header","Left","Right","Body","PostCard","auth","db","ScrollView","Stories","Feed","navigation","posts","setPosts","userFollowing","setUserFollowing","postsFor","currentUser","uid","postList","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","allPosts","i","console","log","userId","thisPosts","user","length","concat","name","setName","picUrl","setPicUrl","getphotoUrl","get","then","photoURL","getDisplayName","displayName","renderPosts","navigate","posterName","PosterId","posterProfilePic","image","downloadURL","postDate","caption","likes","likesCount","creation","styles","container","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native'\r\nimport { Container, Content, Icon, Thumbnail, Header, Left, Right, Body } from 'native-base'\r\nimport PostCard from '../components/PostCard'\r\nimport { auth, db } from '../firebase'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\nimport Stories from '../components/Stories'\r\n\r\n\r\n\r\nexport default function Feed({ navigation }) {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [userFollowing, setUserFollowing] = useState([])\r\n\r\n    \r\n\r\n\r\n    const postsFor = auth.currentUser.uid;\r\n\r\n    useEffect(() => {\r\n        var postList = []\r\n        db.collection('following')\r\n                .doc(postsFor).collection('userFollowing')\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => setUserFollowing(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n        }))))\r\n\r\n    \r\n\r\n    \r\n        var allPosts = []\r\n        for (let i = 0; i<userFollowing.length; i++){\r\n            //console.warn(userFollowing[i].data.userId)\r\n           \r\n            console.log(\"Posts\")\r\n            \r\n            db.collection('posts')\r\n            .doc(userFollowing[i].data.userId).collection('userPosts')\r\n            .orderBy('creation', 'desc')\r\n            .onSnapshot((snapshot) =>  {\r\n                var thisPosts = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            user: userFollowing[i].data.userId,\r\n            data: doc.data()\r\n            })\r\n            )\r\n            if (postList.length > 0){\r\n                setPosts(posts.concat(thisPosts))\r\n\r\n            }\r\n            else {\r\n                setPosts(thisPosts)\r\n            }\r\n            \r\n            \r\n           \r\n        })\r\n        }\r\n        \r\n        \r\n        \r\n\r\n        /*\r\n        userFollowing.map(({id, data}) => {\r\n            db.collection('posts')\r\n            .doc(data.userId).collection('userPosts')\r\n            .orderBy('creation', 'desc')\r\n            .onSnapshot((snapshot) =>  postList.push(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n            }))))\r\n            \r\n        } )\r\n        */\r\n\r\n       \r\n        //console.log(postList)\r\n        //setPosts(postList)\r\n\r\n        //console.warn(postList)\r\n        \r\n\r\n    }, [])\r\n\r\n    /*\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('posts')\r\n            .doc(postsFor).collection('userPosts')\r\n            .orderBy('creation', 'desc')\r\n            .onSnapshot((snapshot) => setPosts(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n            }))))\r\n\r\n        return unsubscribe\r\n    }, [auth.currentUser.photoURL])\r\n    */\r\n\r\n    //const [postName, setName] = useState('')\r\n\r\n    const [name, setName] = useState('')\r\n    const [picUrl, setPicUrl] = useState('')\r\n\r\n    function getphotoUrl(uid){\r\n        \r\n        db.collection(\"users\")\r\n        .doc(uid)\r\n        .get()\r\n        .then((doc) =>  {\r\n            setPicUrl(doc.data().photoURL)\r\n            \r\n        })\r\n\r\n        return picUrl\r\n\r\n\r\n    }\r\n    \r\n\r\n    function getDisplayName(uid){\r\n        \r\n        db.collection(\"users\")\r\n        .doc(uid)\r\n        .get()\r\n        .then((doc) =>  {\r\n            setName(doc.data().displayName)\r\n            \r\n        })\r\n\r\n        return name\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n \r\n\r\n    function renderPosts(){\r\n      \r\n\r\n        if (posts.length == 0){\r\n            return (\r\n                <View>\r\n                    <Text >Nothing on your feed yet</Text>\r\n                </View>\r\n            )\r\n        }\r\n    \r\n        \r\n        return (\r\n            \r\n            posts.map(({id, user, data}) => (\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Post-Detail\", {\r\n                    id: id,\r\n                    posterName: getDisplayName(user),\r\n                    PosterId: user,\r\n                    posterProfilePic: getphotoUrl(user),\r\n                    image: data.downloadURL,\r\n                    postDate: \"idk\",\r\n                    caption: data.caption,\r\n                    likes: data.likesCount,\r\n                    \r\n                })}>\r\n                <PostCard\r\n                //key={id}\r\n                key={id}\r\n                id={id}\r\n                posterName={getDisplayName(user)}\r\n                posterProfilePic={getphotoUrl(user)}\r\n                PosterID={user}\r\n                image={data.downloadURL}\r\n                postDate={data.creation}\r\n                caption={data.caption}\r\n                likes={data.likesCount}\r\n                navigation={navigation}\r\n                \r\n                />\r\n                </TouchableOpacity>\r\n            ))\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <Container style={styles.container}>\r\n            <Container>\r\n            <ScrollView>\r\n                <Stories/>\r\n           \r\n                {renderPosts()}\r\n            </ScrollView>\r\n            </Container>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}