{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\zmais\\\\OneDrive\\\\Desktop\\\\react-apps\\\\signal-chat\\\\components\\\\PostDetail.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { ListItem } from \"react-native-elements/dist/list/ListItem\";\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base';\nimport { auth, db } from \"../services/firebase\";\nimport firebase from 'firebase';\nimport { Avatar } from \"react-native-elements/dist/avatar/Avatar\";\nexport default function PostDetail(props) {\n  var _props$route$params = props.route.params,\n      id = _props$route$params.id,\n      posterName = _props$route$params.posterName,\n      PosterId = _props$route$params.PosterId,\n      posterProfilePic = _props$route$params.posterProfilePic,\n      image = _props$route$params.image,\n      postDate = _props$route$params.postDate,\n      caption = _props$route$params.caption,\n      navigation = _props$route$params.navigation,\n      email = _props$route$params.email;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      likesCount = _useState2[0],\n      setLikes = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inLikes = _useState4[0],\n      setInLikes = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      removeLike = _useState6[0],\n      setRemoveLike = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  useEffect(function () {\n    db.collection('postLikes').doc(id).collection('usersLiked').onSnapshot(function (snapshot) {\n      return setLikes(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    db.collection('postLikes').doc(id).collection('usersLiked').where('userId', '==', auth.currentUser.uid).get().then(function (snapshot) {\n      var likers = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setInLikes(likers);\n    });\n  }, [inLikes]);\n\n  function addLike() {\n    db.collection('postLikes').doc(id).collection('usersLiked').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      userId: auth.currentUser.uid\n    });\n  }\n\n  function deleteLike() {\n    db.collection('postLikes').doc(id).collection('usersLiked').doc(inLikes[0].id).delete();\n  }\n\n  function likesRender() {\n    if (inLikes.length == 0) {\n      return React.createElement(Button, {\n        transparent: true,\n        onPress: function onPress() {\n          return addLike();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-heart-outline\",\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return React.createElement(Button, {\n        transparent: true,\n        onPress: function onPress() {\n          return deleteLike();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-heart\",\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n  function loadDeleteButton() {\n    if (auth.currentUser.uid = PosterId) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, React.createElement(Avatar, {\n        source: {\n          uri: \"https://cdn1.iconfinder.com/data/icons/jumpicon-basic-ui-glyph-1/32/-_Dot-More-Vertical-Menu-512.png\"\n        },\n        style: {\n          color: 'black',\n          width: 25,\n          height: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Would you like to delete this post? \"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonDelete],\n    onPress: function onPress() {\n      db.collection(\"posts\").doc(PosterId).collection(\"userPosts\").doc(id).delete();\n      props.navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Delete\")), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))), React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(CardItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, React.createElement(Left, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Profile\", {\n        currentUser: {\n          displayName: posterName,\n          email: email,\n          photoURL: posterProfilePic,\n          uid: PosterId\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, React.createElement(Thumbnail, {\n    source: {\n      uri: posterProfilePic\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })), React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, posterName, \" \"))), React.createElement(Right, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, loadDeleteButton())), React.createElement(CardItem, {\n    cardBody: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      height: 300,\n      width: null,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), React.createElement(CardItem, {\n    style: {\n      height: 45\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, likesRender(), React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Comments\", {\n        posterProfilePic: posterProfilePic,\n        posterUserName: posterName,\n        posterCaption: caption,\n        postId: id,\n        PosterId: PosterId,\n        image: image\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-chatbubbles-outline\",\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Share-Post\", {\n        id: id,\n        posterName: posterName,\n        PosterId: PosterId,\n        posterProfilePic: posterProfilePic,\n        image: image,\n        caption: caption,\n        email: email\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-send-outline\",\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })))), React.createElement(CardItem, {\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, likesCount.length)), React.createElement(CardItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"900\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), caption)))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  buttonDelete: {\n    backgroundColor: \"#FF0000\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/zmais/OneDrive/Desktop/react-apps/signal-chat/components/PostDetail.js"],"names":["React","useState","useEffect","ListItem","Card","CardItem","Thumbnail","Body","Left","Right","Button","Icon","auth","db","firebase","Avatar","PostDetail","props","route","params","id","posterName","PosterId","posterProfilePic","image","postDate","caption","navigation","email","likesCount","setLikes","inLikes","setInLikes","removeLike","setRemoveLike","modalVisible","setModalVisible","collection","doc","onSnapshot","snapshot","docs","map","data","where","currentUser","uid","get","then","likers","addLike","add","timestamp","firestore","FieldValue","serverTimestamp","userId","deleteLike","delete","likesRender","length","color","loadDeleteButton","uri","width","height","Alert","alert","styles","centeredView","modalView","modalText","button","buttonDelete","goBack","textStyle","buttonClose","navigate","displayName","photoURL","flex","posterUserName","posterCaption","postId","fontWeight","StyleSheet","create","container","alignItems","justifyContent","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Alert,\r\n    Modal,\r\n    Pressable\r\n} from \"react-native\";\r\n\r\nimport { ListItem } from \"react-native-elements/dist/list/ListItem\";\r\n\r\nimport { Card, CardItem, Thumbnail, Body, Left, Right, Button, Icon } from 'native-base'\r\nimport { auth, db } from \"../services/firebase\";\r\nimport firebase from 'firebase'\r\nimport { Avatar } from \"react-native-elements/dist/avatar/Avatar\";\r\n\r\n\r\n\r\nexport default function PostDetail(props){\r\n\r\n    const {id,posterName, PosterId, posterProfilePic, image, postDate, caption, navigation, email} = props.route.params;\r\n\r\n    const [likesCount, setLikes] = useState([]);\r\n    const [inLikes, setInLikes ] = useState([]);\r\n    const [removeLike, setRemoveLike ] = useState([])\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        db.collection('postLikes')\r\n            .doc(id).collection('usersLiked')\r\n            .onSnapshot((snapshot) => setLikes(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n        }))))\r\n\r\n        db.collection('postLikes').doc(id).collection('usersLiked')\r\n            .where('userId', '==', auth.currentUser.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                let likers = snapshot.docs.map(doc => {\r\n                    const data = doc.data();\r\n                    const id = doc.id;\r\n                    return { id, ...data }\r\n            });\r\n            setInLikes(likers)\r\n            \r\n        })\r\n\r\n        \r\n\r\n    }, [inLikes])\r\n\r\n\r\n   \r\n\r\n    function addLike(){\r\n        db.collection('postLikes')\r\n        .doc(id)\r\n        .collection('usersLiked')\r\n        .add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            userId: auth.currentUser.uid,\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function deleteLike(){\r\n        db.collection('postLikes')\r\n        .doc(id)\r\n        .collection('usersLiked')\r\n        .doc(inLikes[0].id)\r\n        .delete()\r\n\r\n\r\n    }\r\n\r\n\r\n    function likesRender(){\r\n        if (inLikes.length == 0){\r\n            return (\r\n                <Button transparent onPress={() => addLike()}>\r\n                <Icon name=\"ios-heart-outline\" style={{ color: 'black' }} />\r\n                </Button>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Button transparent onPress={() => deleteLike()}>\r\n                <Icon  name=\"ios-heart\" style={{ color: 'red' }} />\r\n                </Button>\r\n            )\r\n        }\r\n    }\r\n\r\n    function loadDeleteButton(){\r\n        if (auth.currentUser.uid = PosterId){\r\n            return (\r\n                <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n                <Avatar source={{uri: \"https://cdn1.iconfinder.com/data/icons/jumpicon-basic-ui-glyph-1/32/-_Dot-More-Vertical-Menu-512.png\"}} style={{ color: 'black', width: 25, height: 25 }} />\r\n                </TouchableOpacity>\r\n            )\r\n        }\r\n    }\r\n\r\n    //navigation.navigate(\"Profile\", {currentUser: PosterId})\r\n    return (\r\n        <View>\r\n            <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Would you like to delete this post? </Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonDelete]}\r\n              onPress={() => {\r\n                  db.collection(\"posts\")\r\n                  .doc(PosterId)\r\n                  .collection(\"userPosts\")\r\n                  .doc(id)\r\n                  .delete()\r\n\r\n                  //navigation.navigate(\"Profile\", {currentUser: auth.currentUser})\r\n                  props.navigation.goBack()\r\n              }}\r\n            >\r\n              <Text style={styles.textStyle}>Delete</Text>\r\n            </Pressable>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => setModalVisible(!modalVisible)}\r\n            >\r\n              <Text style={styles.textStyle}>Cancel</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n\r\n            <Card>\r\n            <CardItem>\r\n            <Left>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Profile\", {currentUser: {\r\n                    displayName: posterName,\r\n                    email: email,\r\n                    photoURL: posterProfilePic,\r\n                    uid: PosterId\r\n                }})}>\r\n                <Thumbnail source={{uri: posterProfilePic}} />\r\n                </TouchableOpacity>\r\n                <Body>\r\n                    <Text>{posterName} </Text>\r\n                    \r\n                </Body>\r\n\r\n                \r\n            </Left>\r\n            <Right>\r\n                \r\n                {loadDeleteButton()}\r\n                \r\n            </Right>\r\n        </CardItem>\r\n        <CardItem cardBody>\r\n            <Image source={{uri: image}} style={{ height: 300, width: null, flex: 1 }} />\r\n        </CardItem>\r\n        <CardItem style={{ height: 45 }}>\r\n            <Left>\r\n                    {likesRender()}\r\n            \r\n                <Button transparent onPress={() => props.navigation.navigate(\"Comments\", {\r\n                    posterProfilePic: posterProfilePic,\r\n                    posterUserName: posterName,\r\n                    posterCaption: caption,\r\n                    postId: id,\r\n                    PosterId: PosterId,\r\n                    image: image,\r\n                })}>\r\n                    <Icon name=\"ios-chatbubbles-outline\" style={{ color: 'black' }} />\r\n                </Button>\r\n                <Button transparent onPress={() => props.navigation.navigate(\"Share-Post\", {\r\n                    id: id,\r\n                    posterName: posterName,\r\n                    PosterId: PosterId,\r\n                    posterProfilePic: posterProfilePic,\r\n                    image: image,\r\n                    caption: caption,\r\n                    email: email\r\n\r\n                })}>\r\n                    <Icon name=\"ios-send-outline\" style={{ color: 'black' }} />\r\n                </Button>\r\n\r\n\r\n            </Left>\r\n        </CardItem>\r\n\r\n        <CardItem style={{ height: 20 }}>\r\n            <Text>{likesCount.length}</Text>\r\n        </CardItem>\r\n        <CardItem>\r\n            <Body>\r\n                <Text>\r\n                    <Text style={{ fontWeight: \"900\" }}>\r\n                    </Text>\r\n                    {caption}\r\n                </Text>\r\n            </Body>\r\n        </CardItem>\r\n        </Card>\r\n    </View>\r\n         \r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n      },\r\n      modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n      },\r\n      button: {\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2\r\n      },\r\n      buttonOpen: {\r\n        backgroundColor: \"#F194FF\",\r\n      },\r\n      buttonClose: {\r\n        backgroundColor: \"#2196F3\",\r\n      },\r\n      buttonDelete: {\r\n        backgroundColor: \"#FF0000\",\r\n      },\r\n      textStyle: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n      },\r\n      modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\"\r\n      }\r\n});"]},"metadata":{},"sourceType":"module"}